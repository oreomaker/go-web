package main

import (
	"context"
	demouser "go-web/user/kitex_gen/demouser"
)

// UserServiceImpl implements the last service interface defined in the IDL.
type UserServiceImpl struct{}

// CreateUser implements the UserServiceImpl interface.
func (s *UserServiceImpl) CreateUser(ctx context.Context, req *demouser.CreateUserRequest) (resp *demouser.CreateUserResponse, err error) {
	resp = new(demouser.CreateUserResponse)

	// TODO: no validation generated by kitex
	// if err = req.IsValid(); err != nil {
	// 	resp.BaseResp = pack.BuildBaseResp(errno.ParamErr)
	// 	return resp, nil
	// }

	resp.BaseResp = new(demouser.BaseResp)
	resp.BaseResp.Code = 0
	resp.BaseResp.Message = "success"

	return resp, nil
}

// MGetUser implements the UserServiceImpl interface.
func (s *UserServiceImpl) MGetUser(ctx context.Context, req *demouser.MGetUserRequest) (resp *demouser.MGetUserResponse, err error) {
	// TODO: Your code here...
	return
}

// CheckUser implements the UserServiceImpl interface.
func (s *UserServiceImpl) CheckUser(ctx context.Context, req *demouser.CheckUserRequest) (resp *demouser.CheckUserResponse, err error) {
	// TODO: Your code here...
	return
}
